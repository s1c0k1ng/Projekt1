// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt1.DATA;

#nullable disable

namespace Projekt1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230119133208_initial migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Projekt1.DATA.Calculator", b =>
                {
                    b.Property<int>("CalculatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalculatorID"), 1L, 1);

                    b.Property<string>("CalculationMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("FirstNumb")
                        .HasColumnType("float");

                    b.Property<double>("SecondNumb")
                        .HasColumnType("float");

                    b.Property<double>("Sum")
                        .HasColumnType("float");

                    b.Property<double>("Sum2")
                        .HasColumnType("float");

                    b.HasKey("CalculatorID");

                    b.ToTable("Calculators");
                });

            modelBuilder.Entity("Projekt1.DATA.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameID"), 1L, 1);

                    b.Property<double>("AvarageScore")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("GamesPlayed")
                        .HasColumnType("float");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<double>("Wins")
                        .HasColumnType("float");

                    b.HasKey("GameID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Projekt1.DATA.Shape", b =>
                {
                    b.Property<int>("ShapeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShapeID"), 1L, 1);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Perimeter")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("input1")
                        .HasColumnType("float");

                    b.Property<double>("input2")
                        .HasColumnType("float");

                    b.Property<double>("input3")
                        .HasColumnType("float");

                    b.Property<double>("input4")
                        .HasColumnType("float");

                    b.Property<double>("input5")
                        .HasColumnType("float");

                    b.HasKey("ShapeID");

                    b.ToTable("Shapes");
                });
#pragma warning restore 612, 618
        }
    }
}
